/*
    배경을 가득 채우기 위해 기존의 body값을 없애고
    기존의 항목들이 망가지지 않게 header와 status-bar만 패딩을 그대로 주었다.
*/
.chats-body {
    padding: 0px;
}

.chats-body .header,
.chats-body .status-bar {
    padding: 0px 20px;
}

.chat-screen {
    background-image: url("../images/chat-BG.png");
    /* 배경 가득 채우는것 */
    min-height: 100vh;
    margin-top: 67px;
}

.chat__write-container {
    position: fixed;
    bottom:0;
    /*
        position이 fixed인 div의
        가운데 정렬법: 

        margin: 0 auto;
        left: 0;
        right: 0;

    */ 
    margin: 0 auto;
    left: 0;
    right: 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
}

@keyframes float{
    0%{
        box-shadow: 0 13px 27px -15px rgba(50,50,93,.25), 
        0 8px 16px -8px rgba(0,0,0,.3), 0 -6px 16px -6px rgba(0,0,0,.025);
    }
    50%{
        box-shadow: 0 13px 20px 8px rgba(50,50,93,.25), 
        0 8px 16px -8px rgba(0,0,0,.3), 0 -6px 16px -6px rgba(0,0,0,.025);
    }
    100%{
        box-shadow: 0 13px 27px -15px rgba(50,50,93,.25), 
        0 8px 16px -8px rgba(0,0,0,.3), 0 -6px 16px -6px rgba(0,0,0,.025);
    }
}

.chat__write {
    bottom: 0px;
    width: 100%;
    border-radius: 0px;
    padding: 20px 60px;
    border: none;
    margin: 0 auto;
    font-size: 15px;
    transition: width .5s ease-in-out, radius .5s ease-in-out,
     transform .5s ease-in-out;
}

.chat__write:focus {
    outline: none;
    width: 80%;
    transform: translateY(-80px);
    border-radius: 40px;
    /*
        box-shadow: 수평 수직 blur color;
        2가지의 shadow를 넣으려면 마지막에 , 를 쓰고
        똑같이 작성하면 된다
        참고 : https://stripe.com/
    */   
    box-shadow: 0 13px 27px -5px rgba(50,50,93,.25), 
    0 8px 16px -8px rgba(0,0,0,.3), 0 -6px 16px -6px rgba(0,0,0,.025);
    animation: float 3s ease-in-out infinite forwards;
}

.chat__icon {
    font-size: 18px;
    transition: opacity 0.2s ease-in-out
}

/*sibling selector (~)를 사용하기 위해선 html상에서 input이 icon앞에 나와야 한다.*/
.chat__write:focus ~ .chat__icon {
    /* animation을 위해 display:none 이 아닌 opacity: 0 으로 선언*/
    opacity: 0;
}


.chat__icon-left {
    position: absolute;
    left: 10px;
}

.chat__icon-right {
    position: absolute;
    right: 10px;
}

.chat__write i {
    font-size: 22px;
    cursor: pointer;
    margin-right: 3px;
}

.chat__write-column:nth-child(2){
    width: 80%;
}


.chat-screen .chat__messages {
    padding-top: 30px;
    display: flex;
    align-items: center;
    flex-direction: column;
    padding: 0px 20px;
}

.chat__messages .chat__timestamp {
    background-color: #fcfcfc;
    font-size: 12px;
    padding: 5px 10px;
    border-radius: 10px;
    border: 1px solid #f7f7f7;
    margin-top: 20px;
    margin-bottom: 30px;
    box-shadow: 0 4px 6px rgba(50,50,93,.11), 0 1px 3px rgba(0,0,0,.08);
    text-transform: uppercase;
    font-weight: 700;
    opacity: 0.7;
}

.message {
    display: flex;
    align-items: flex-start;
    width: 50%;
    margin-bottom: 20px;
}

.message .message__content {
    width: 80%;
}

.incoming-message {
    align-self: flex-start;
    animation: incomingAnimation .5s ease-out forwards;
}

.incoming-message img {
    width: 40px;
    border-radius: 10px;
    margin-right: 15px;
    animation: spin 1s linear;
}

@keyframes spin {
    from{
        transform: rotateY(.3turn);
    }
    to{
        transform: none;
    }
}

.incoming-message .message__author {
    margin-bottom: 10px;
    display: block;
    font-weight: 600;
    font-size: 14px;
}

.sent-message {
    align-self: flex-end;
    animation: sentAnimation .5s ease-out forwards;
}

.message .message__bubble {
    background-color: #f7f7f7;
    padding: 10px 20px;
    border-radius: 25px;
    box-shadow: 0 13px 27px -5px rgba(50,50,93,.25), 
    0 8px 16px -8px rgba(0,0,0,.3), 0 -6px 16px -6px rgba(0,0,0,.025);
    font-size: 13px;
    font-weight: 600;
}

.incoming-message .message__bubble {
    border-top-left-radius: 0px;
    /*
        gradient color는 image로 조정할 수 있다.
        방향을 정해주지 않으면 위에서 아래로
    */
    background-image: linear-gradient(to right, rgb(241, 230, 226), rgb(255, 247, 255));
}

.sent-message .message__bubble {
    border-bottom-right-radius: 0px;
    background-image: linear-gradient(to left, #f8b785, #f5d5bc)
}

@keyframes incomingAnimation {
    from {
        opacity: 0;
        transform: translateX(-30px);
    }
    to {
        opacity: 1;
        transform: none;
    }
}

@keyframes sentAnimation {
    from {
        opacity: 0;
        transform: translateX(30px);
    }
    to {
        opacity: 1;
        transform: none;
    }
}